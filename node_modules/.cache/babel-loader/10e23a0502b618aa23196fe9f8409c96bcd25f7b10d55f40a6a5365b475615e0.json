{"ast":null,"code":"var _jsxFileName = \"/Users/raywarner/Documents/ZTM/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'c60c9701863f4f3c9c10d6c60cbb292d'\n});\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    email: '',\n    id: '',\n    name: '',\n    entries: 0,\n    joined: ''\n  }\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          email: data.email,\n          id: data.id,\n          name: data.name,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n    this.calculateFaceLocation = data => {\n      const clarafaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarafaiFace.left_col * width,\n        topRow: clarafaiFace.top_row * height,\n        rightCol: width - clarafaiFace.right_col * width,\n        bottomRow: height - clarafaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict('face-detection', this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.state = initialState;\n  }\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this) : route === 'signin' || route === 'signout' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Clarifai","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Signin","Register","jsxDEV","_jsxDEV","app","App","apiKey","initialState","input","imageUrl","box","route","isSignedIn","user","email","id","name","entries","joined","constructor","loadUser","data","setState","calculateFaceLocation","clarafaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","onButtonSubmit","state","models","predict","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","console","log","err","onRouteChange","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/raywarner/Documents/ZTM/facerecognitionbrain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\n\nconst app = new Clarifai.App({\n apiKey: 'c60c9701863f4f3c9c10d6c60cbb292d'\n});\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    email: '',\n    id: '',\n    name: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n      super();\n      this.state = initialState;\n  }\n\nloadUser = (data) => {\n  this.setState({user: {\n    email: data.email,\n    id: data.id,\n    name: data.name,\n    entries: data.entries,\n    joined: data.joined\n  }})\n}\n\ncalculateFaceLocation = (data) => {\n   const clarafaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n   const image = document.getElementById('inputimage');\n   const width = Number(image.width);\n   const height = Number(image.height);\n   return {\n    leftCol: clarafaiFace.left_col * width,\n    topRow: clarafaiFace.top_row * height,\n    rightCol: width - (clarafaiFace.right_col * width),\n    bottomRow: height - (clarafaiFace.bottom_row * height)\n   }\n}\n\ndisplayFaceBox = (box) => {\n  this.setState({box: box});\n}\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models.predict('face-detection', this.state.input)\n    .then(response => {\n      if (response) {\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, { entries: count}))\n        })\n        .catch(console.log);\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home'){\n      this.setState({isSignedIn: true })\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        { route === 'home' \n          ? <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n              <ImageLinkForm \n              onInputChange={this.onInputChange} \n              onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={box} imageUrl={imageUrl}/>\n            </div>\n          : (\n              (route === 'signin' || route === 'signout')\n              ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}