{"ast":null,"code":"'use strict';\n\n/**\n * Dispatch a request to the server using whichever adapter\n * is supported by the current environment.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  return new Promise(function executor(resolve, reject) {\n    try {\n      var adapter;\n      if (typeof config.adapter === 'function') {\n        // For custom adapter support\n        adapter = config.adapter;\n      } else if (typeof XMLHttpRequest !== 'undefined') {\n        // For browsers use XHR adapter\n        adapter = require('../adapters/xhr');\n      } else if (typeof process !== 'undefined') {\n        // For node use HTTP adapter\n        adapter = require('../adapters/http');\n      }\n      if (typeof adapter === 'function') {\n        adapter(resolve, reject, config);\n      }\n    } catch (e) {\n      reject(e);\n    }\n  });\n};","map":{"version":3,"names":["module","exports","dispatchRequest","config","Promise","executor","resolve","reject","adapter","XMLHttpRequest","require","process","e"],"sources":["/Users/raywarner/Documents/ZTM/facerecognitionbrain/node_modules/axios/lib/core/dispatchRequest.js"],"sourcesContent":["'use strict';\n\n/**\n * Dispatch a request to the server using whichever adapter\n * is supported by the current environment.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  return new Promise(function executor(resolve, reject) {\n    try {\n      var adapter;\n\n      if (typeof config.adapter === 'function') {\n        // For custom adapter support\n        adapter = config.adapter;\n      } else if (typeof XMLHttpRequest !== 'undefined') {\n        // For browsers use XHR adapter\n        adapter = require('../adapters/xhr');\n      } else if (typeof process !== 'undefined') {\n        // For node use HTTP adapter\n        adapter = require('../adapters/http');\n      }\n\n      if (typeof adapter === 'function') {\n        adapter(resolve, reject, config);\n      }\n    } catch (e) {\n      reject(e);\n    }\n  });\n};\n\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAO,GAAG,SAASC,eAAeA,CAACC,MAAM,EAAE;EAChD,OAAO,IAAIC,OAAO,CAAC,SAASC,QAAQA,CAACC,OAAO,EAAEC,MAAM,EAAE;IACpD,IAAI;MACF,IAAIC,OAAO;MAEX,IAAI,OAAOL,MAAM,CAACK,OAAO,KAAK,UAAU,EAAE;QACxC;QACAA,OAAO,GAAGL,MAAM,CAACK,OAAO;MAC1B,CAAC,MAAM,IAAI,OAAOC,cAAc,KAAK,WAAW,EAAE;QAChD;QACAD,OAAO,GAAGE,OAAO,CAAC,iBAAiB,CAAC;MACtC,CAAC,MAAM,IAAI,OAAOC,OAAO,KAAK,WAAW,EAAE;QACzC;QACAH,OAAO,GAAGE,OAAO,CAAC,kBAAkB,CAAC;MACvC;MAEA,IAAI,OAAOF,OAAO,KAAK,UAAU,EAAE;QACjCA,OAAO,CAACF,OAAO,EAAEC,MAAM,EAAEJ,MAAM,CAAC;MAClC;IACF,CAAC,CAAC,OAAOS,CAAC,EAAE;MACVL,MAAM,CAACK,CAAC,CAAC;IACX;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}