{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar axios = require('axios');\nvar _require = require('./constants'),\n  API = _require.API,\n  replaceVars = _require.replaceVars;\nvar WORKFLOWS_PATH = API.WORKFLOWS_PATH,\n  WORKFLOW_PATH = API.WORKFLOW_PATH,\n  WORKFLOW_RESULTS_PATH = API.WORKFLOW_RESULTS_PATH;\nvar _require2 = require('./utils'),\n  wrapToken = _require2.wrapToken,\n  formatInput = _require2.formatInput;\nvar _require3 = require('./helpers'),\n  checkType = _require3.checkType;\n\n/**\n * class representing a workflow\n * @class\n */\n\nvar Workflow = function () {\n  function Workflow(_config) {\n    var rawData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    _classCallCheck(this, Workflow);\n    this._config = _config;\n    this.rawData = rawData;\n  }\n  _createClass(Workflow, [{\n    key: 'create',\n    value: function create(workflowId, config) {\n      var url = '' + this._config.basePath + WORKFLOWS_PATH;\n      var modelId = config.modelId;\n      var modelVersionId = config.modelVersionId;\n      var body = {\n        workflows: [{\n          id: workflowId,\n          nodes: [{\n            id: 'concepts',\n            model: {\n              id: modelId,\n              model_version: {\n                id: modelVersionId\n              }\n            }\n          }]\n        }]\n      };\n      return wrapToken(this._config, function (headers) {\n        return new Promise(function (resolve, reject) {\n          axios.post(url, body, {\n            headers: headers\n          }).then(function (response) {\n            var workflowId = response.data.workflows[0].id;\n            resolve(workflowId);\n          }, reject);\n        });\n      });\n    }\n  }, {\n    key: 'delete',\n    value: function _delete(workflowId, config) {\n      var url = '' + this._config.basePath + replaceVars(WORKFLOW_PATH, [workflowId]);\n      return wrapToken(this._config, function (headers) {\n        return new Promise(function (resolve, reject) {\n          axios.delete(url, {\n            headers: headers\n          }).then(function (response) {\n            var data = response.data;\n            resolve(data);\n          }, reject);\n        });\n      });\n    }\n\n    /**\n     * Returns workflow output according to inputs\n     * @param {string}                   workflowId    Workflow id\n     * @param {object[]|object|string}   inputs    An array of objects/object/string pointing to an image resource. A string can either be a url or base64 image bytes. Object keys explained below:\n     *    @param {object}                  inputs[].image     Object with keys explained below:\n     *       @param {string}                 inputs[].image.(url|base64)  Can be a publicly accessibly url or base64 string representing image bytes (required)\n     */\n  }, {\n    key: 'predict',\n    value: function predict(workflowId, inputs) {\n      var url = '' + this._config.basePath + replaceVars(WORKFLOW_RESULTS_PATH, [workflowId]);\n      if (checkType(/(Object|String)/, inputs)) {\n        inputs = [inputs];\n      }\n      return wrapToken(this._config, function (headers) {\n        var params = {\n          inputs: inputs.map(formatInput)\n        };\n        return new Promise(function (resolve, reject) {\n          axios.post(url, params, {\n            headers: headers\n          }).then(function (response) {\n            var data = response.data;\n            resolve(data);\n          }, reject);\n        });\n      });\n    }\n  }]);\n  return Workflow;\n}();\nmodule.exports = Workflow;","map":{"version":3,"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","axios","require","_require","API","replaceVars","WORKFLOWS_PATH","WORKFLOW_PATH","WORKFLOW_RESULTS_PATH","_require2","wrapToken","formatInput","_require3","checkType","Workflow","_config","rawData","arguments","undefined","value","create","workflowId","config","url","basePath","modelId","modelVersionId","body","workflows","id","nodes","model","model_version","headers","Promise","resolve","reject","post","then","response","data","_delete","delete","predict","inputs","params","map","module","exports"],"sources":["/Users/raywarner/Documents/ZTM/facerecognitionbrain/node_modules/clarifai/dist/Workflow.js"],"sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar axios = require('axios');\n\nvar _require = require('./constants'),\n    API = _require.API,\n    replaceVars = _require.replaceVars;\n\nvar WORKFLOWS_PATH = API.WORKFLOWS_PATH,\n    WORKFLOW_PATH = API.WORKFLOW_PATH,\n    WORKFLOW_RESULTS_PATH = API.WORKFLOW_RESULTS_PATH;\n\nvar _require2 = require('./utils'),\n    wrapToken = _require2.wrapToken,\n    formatInput = _require2.formatInput;\n\nvar _require3 = require('./helpers'),\n    checkType = _require3.checkType;\n\n/**\n * class representing a workflow\n * @class\n */\n\n\nvar Workflow = function () {\n  function Workflow(_config) {\n    var rawData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    _classCallCheck(this, Workflow);\n\n    this._config = _config;\n    this.rawData = rawData;\n  }\n\n  _createClass(Workflow, [{\n    key: 'create',\n    value: function create(workflowId, config) {\n      var url = '' + this._config.basePath + WORKFLOWS_PATH;\n      var modelId = config.modelId;\n      var modelVersionId = config.modelVersionId;\n      var body = {\n        workflows: [{\n          id: workflowId,\n          nodes: [{\n            id: 'concepts',\n            model: {\n              id: modelId,\n              model_version: {\n                id: modelVersionId\n              }\n            }\n          }]\n        }]\n      };\n\n      return wrapToken(this._config, function (headers) {\n        return new Promise(function (resolve, reject) {\n          axios.post(url, body, {\n            headers: headers\n          }).then(function (response) {\n            var workflowId = response.data.workflows[0].id;\n            resolve(workflowId);\n          }, reject);\n        });\n      });\n    }\n  }, {\n    key: 'delete',\n    value: function _delete(workflowId, config) {\n      var url = '' + this._config.basePath + replaceVars(WORKFLOW_PATH, [workflowId]);\n      return wrapToken(this._config, function (headers) {\n        return new Promise(function (resolve, reject) {\n          axios.delete(url, {\n            headers: headers\n          }).then(function (response) {\n            var data = response.data;\n            resolve(data);\n          }, reject);\n        });\n      });\n    }\n\n    /**\n     * Returns workflow output according to inputs\n     * @param {string}                   workflowId    Workflow id\n     * @param {object[]|object|string}   inputs    An array of objects/object/string pointing to an image resource. A string can either be a url or base64 image bytes. Object keys explained below:\n     *    @param {object}                  inputs[].image     Object with keys explained below:\n     *       @param {string}                 inputs[].image.(url|base64)  Can be a publicly accessibly url or base64 string representing image bytes (required)\n     */\n\n  }, {\n    key: 'predict',\n    value: function predict(workflowId, inputs) {\n      var url = '' + this._config.basePath + replaceVars(WORKFLOW_RESULTS_PATH, [workflowId]);\n      if (checkType(/(Object|String)/, inputs)) {\n        inputs = [inputs];\n      }\n      return wrapToken(this._config, function (headers) {\n        var params = {\n          inputs: inputs.map(formatInput)\n        };\n        return new Promise(function (resolve, reject) {\n          axios.post(url, params, {\n            headers: headers\n          }).then(function (response) {\n            var data = response.data;\n            resolve(data);\n          }, reject);\n        });\n      });\n    }\n  }]);\n\n  return Workflow;\n}();\n\nmodule.exports = Workflow;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}