{"ast":null,"code":"'use strict';\n\nvar defaults = require('./defaults');\nvar utils = require('./utils');\nvar dispatchRequest = require('./core/dispatchRequest');\nvar InterceptorManager = require('./core/InterceptorManager');\nvar isAbsoluteURL = require('./helpers/isAbsoluteURL');\nvar combineURLs = require('./helpers/combineURLs');\nvar bind = require('./helpers/bind');\nvar transformData = require('./helpers/transformData');\nfunction Axios(defaultConfig) {\n  this.defaults = utils.merge({}, defaultConfig);\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n  config = utils.merge(defaults, this.defaults, {\n    method: 'get'\n  }, config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Don't allow overriding defaults.withCredentials\n  config.withCredentials = config.withCredentials || this.defaults.withCredentials;\n\n  // Transform request data\n  config.data = transformData(config.data, config.headers, config.transformRequest);\n\n  // Flatten headers\n  config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers || {});\n  utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function cleanHeaderConfig(method) {\n    delete config.headers[method];\n  });\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n  return promise;\n};\nvar defaultInstance = new Axios(defaults);\nvar axios = module.exports = bind(Axios.prototype.request, defaultInstance);\nmodule.exports.Axios = Axios;\n\n// Expose properties from defaultInstance\naxios.defaults = defaultInstance.defaults;\naxios.interceptors = defaultInstance.interceptors;\n\n// Factory for creating new instances\naxios.create = function create(defaultConfig) {\n  return new Axios(defaultConfig);\n};\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function (url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n  axios[method] = bind(Axios.prototype[method], defaultInstance);\n});\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function (url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n  axios[method] = bind(Axios.prototype[method], defaultInstance);\n});","map":{"version":3,"names":["defaults","require","utils","dispatchRequest","InterceptorManager","isAbsoluteURL","combineURLs","bind","transformData","Axios","defaultConfig","merge","interceptors","request","response","prototype","config","url","arguments","method","baseURL","withCredentials","data","headers","transformRequest","common","forEach","cleanHeaderConfig","chain","undefined","promise","Promise","resolve","unshiftRequestInterceptors","interceptor","unshift","fulfilled","rejected","pushResponseInterceptors","push","length","then","shift","defaultInstance","axios","module","exports","create","all","promises","spread","forEachMethodNoData","forEachMethodWithData"],"sources":["/Users/raywarner/Documents/ZTM/facerecognitionbrain/node_modules/axios/lib/axios.js"],"sourcesContent":["'use strict';\n\nvar defaults = require('./defaults');\nvar utils = require('./utils');\nvar dispatchRequest = require('./core/dispatchRequest');\nvar InterceptorManager = require('./core/InterceptorManager');\nvar isAbsoluteURL = require('./helpers/isAbsoluteURL');\nvar combineURLs = require('./helpers/combineURLs');\nvar bind = require('./helpers/bind');\nvar transformData = require('./helpers/transformData');\n\nfunction Axios(defaultConfig) {\n  this.defaults = utils.merge({}, defaultConfig);\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Don't allow overriding defaults.withCredentials\n  config.withCredentials = config.withCredentials || this.defaults.withCredentials;\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nvar defaultInstance = new Axios(defaults);\nvar axios = module.exports = bind(Axios.prototype.request, defaultInstance);\nmodule.exports.Axios = Axios;\n\n// Expose properties from defaultInstance\naxios.defaults = defaultInstance.defaults;\naxios.interceptors = defaultInstance.interceptors;\n\n// Factory for creating new instances\naxios.create = function create(defaultConfig) {\n  return new Axios(defaultConfig);\n};\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n  axios[method] = bind(Axios.prototype[method], defaultInstance);\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n  axios[method] = bind(Axios.prototype[method], defaultInstance);\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}